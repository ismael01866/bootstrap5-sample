@use "sass:map";

/* Colors */

$component-colors: (
  "primary",
  "secondary",
  "accent",
  "success",
  "info",
  "warning",
  "error",
  "light",
  "dark"
) !default;

/* Placements */

$component-placements: (
  "top-left",
  "top-center",
  "top-right",
  "center-left",
  "center-center",
  "center-right",
  "bottom-left",
  "bottom-center",
  "bottom-right"
) !default;

/* Shapes */

$component-border-radius-base: 3px;
$component-border-radius-rounded: 50rem;
$component-shapes: (
  "base": (
    "border-radius": $component-border-radius-base,
  ),
  "rounded": (
    "border-radius": $component-border-radius-rounded,
  ),
) !default;

/**
 *
 * Sizing
 *
 */

$component-height-sizing: ();
$component-max-width-sizing: ();
$component-min-width-sizing: ();
$component-size-sizing: ();
$component-width-sizing: ();

@each $name, $value in $sizes {
  $component-height-sizing: map.merge(
    $component-height-sizing,
    (
      "#{$name}": ("height": $value)
    )
  );
  $component-max-width-sizing: map.merge(
    $component-max-width-sizing,
    (
      "#{$name}": ("max-width": $value)
    )
  );
  $component-min-width-sizing: map.merge(
    $component-min-width-sizing,
    (
      "#{$name}": ("min-width": $value)
    )
  );
  $component-size-sizing: map.merge(
    $component-size-sizing,
    (
      "#{$name}": ("height": $value, "width": $value)
    )
  );
  $component-width-sizing: map.merge(
    $component-width-sizing,
    (
      "#{$name}": ("width": $value)
    )
  );
}

/**
 *
 * Spacing
 *
 */

$component-gap-sizing: ();
$component-margin-sizing: ();
$component-margin-x-sizing: ();
$component-margin-y-sizing: ();
$component-padding-sizing: ();
$component-padding-x-sizing: ();
$component-padding-y-sizing: ();
$component-padding-left-sizing: ();
$component-padding-right-sizing: ();

@each $name, $value in $spaces {
  $component-gap-sizing: map.merge(
    $component-gap-sizing,
    (
      "#{$name}": ("gap": $value)
    )
  );
  $component-margin-sizing: map.merge(
    $component-margin-sizing,
    (
      "#{$name}": ("margin": $value)
    )
  );
  $component-margin-x-sizing: map.merge(
    $component-margin-x-sizing,
    (
      "#{$name}": ("margin-left": $value, "margin-right": $value)
    )
  );
  $component-margin-y-sizing: map.merge(
    $component-margin-y-sizing,
    (
      "#{$name}": ("margin-top": $value, "margin-bottom": $value)
    )
  );
  $component-padding-sizing: map.merge(
    $component-padding-sizing,
    (
      "#{$name}": ("padding": $value)
    )
  );
  $component-padding-x-sizing: map.merge(
    $component-padding-x-sizing,
    (
      "#{$name}": ("padding-left": $value, "padding-right": $value)
    )
  );
  $component-padding-y-sizing: map.merge(
    $component-padding-y-sizing,
    (
      "#{$name}": ("padding-top": $value, "padding-bottom": $value)
    )
  );
  $component-padding-left-sizing: map.merge(
    $component-padding-left-sizing,
    (
      "#{$name}": ("padding-left": $value)
    )
  );
  $component-padding-right-sizing: map.merge(
    $component-padding-right-sizing,
    (
      "#{$name}": ("padding-right": $value)
    )
  );
}

/* Types */

$component-types: (
  "solid",
  "subtle",
  "outline",
  "ghost"
) !default;

/* Typography */

$component-font-sizing: (
  "xxs": (
    "font-size": $font-size-xxs,
  ),
  "xs": (
    "font-size": $font-size-xs,
  ),
  "sm": (
    "font-size": $font-size-sm,
  ),
  "base": (
    "font-size": $font-size-base
  )
) !default;
