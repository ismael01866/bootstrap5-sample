@use "sass:color";
@use "sass:math";

@function color-yiq(
  $background,
  $dark: #000, $light: #fff
) {
  $r: color.red($background);
  $g: color.green($background);
  $b: color.blue($background);
  $yiq: math.div((($r * 299) + ($g * 587) + ($b * 114)), 1000);

  @if $yiq >= 128 {
    @return $dark;
  } @else {
    @return $light;
  }
}

@function color-hex-to-rgb($hex) {
  @return red($hex), green($hex), blue($hex);
}

@function color-hex-to-hsl($hex) {
  @return hue($hex), saturation($hex), lightness($hex);
}

@function color-hue-from-hex($hex) {
  @return hue($hex);
}

@function color-saturation-from-hex($hex) {
  @return saturation($hex);
}

@function color-lightness-from-hex($hex) {
  @return lightness($hex);
}

@function color-subtle-light-mix(
  $color,
  $brightness: $brightness-16
) {
  @return mix(#fff, $color, 100 - $brightness);
}

@function color-reduce-lightness-from-name($name, $amount) {
  $lightness: calc(
    var(--color-#{$name}-lightness) - var(--brightness-#{$amount})
  );

  @return hsl(
    var(--color-#{$name}-hue),
    var(--color-#{$name}-saturation), $lightness);
}

@function color-reduce-lightness-from-name-subtle($name, $amount) {
  $lightness: calc(
    var(--color-#{$name}-subtle-lightness) - var(--brightness-#{$amount})
  );

  @return hsl(
    var(--color-#{$name}-subtle-hue),
    var(--color-#{$name}-subtle-saturation), $lightness);
}
