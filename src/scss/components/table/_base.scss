@use "sass:map";

.table {
  border-collapse: collapse;
  border-color: $table-border-color;
  table-layout: auto;
  width: 100%;

  tbody,
  td,
  tfoot,
  th,
  thead,
  tr {
    border: 0;
    text-align: inherit;
    vertical-align: inherit;
  }

  > thead {
    vertical-align: middle;

    > tr {
      height: $thead-row-height;
    }
  }

  > tbody {
    vertical-align: middle;

    > tr {
      height: $tbody-row-height;
    }
  }

  > tfoot {
    vertical-align: middle;

    > tr {
      height: $tfoot-row-height;
    }
  }
}

// -- Borders

/* stylelint-disable no-descending-specificity */

.table.component-border-bordered {
  border: $table-border-width solid $table-border-color;
  border-radius: $table-border-radius;

  > :not(caption) > * {
    > * {
      border-bottom: $table-border-width solid $table-border-color;
    }
  }
}

.table.component-border-flushed {
  > tfoot {
    > * {
      > * {
        border-bottom: 0 !important;
      }
    }
  }

  > :not(caption) > * {
    > * {
      border-bottom: $table-border-width solid $table-border-color;
    }
  }
}

// -- Size

@each $size, $props in $table-sizes {
  $padding-x: map.get($props, "padding-x");
  $padding-y: map.get($props, "padding-y");

  .table.component-size-#{$size} {
    > :not(caption) > * > * {
      @include map-props-mixin(
        map.get($component-padding-x-sizing, $padding-x));
      @include map-props-mixin(
        map.get($component-padding-y-sizing, $padding-y));
    }
  }
}
