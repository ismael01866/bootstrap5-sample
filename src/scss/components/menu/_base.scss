@use "sass:map";

.menu {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

// -- Size

@each $size, $props in $menu-sizes {
  .menu.component-size-#{$size} {
    $height: map.get($props, "height");
    $min-height: map.get($props, "min-height");
    $spacing: map.get($props, "spacing");

    .menu-item {
      @include map-props-mixin(
        map.get($component-margin-x-sizing, $spacing));
    }

    .menu-link {
      $margin: map.get(
        map.get($component-margin-sizing, $spacing),
        "margin"
      );

      @include map-props-mixin(
        map.get($component-height-sizing, $height));
      @include map-props-mixin(
        map.get($component-min-height-sizing, $min-height));
      @include map-props-mixin(
        map.get($component-padding-x-sizing, $spacing));

      margin-left: -#{$margin};
      margin-right: -#{$margin};
    }
  }
}

// Width

@each $width, $props in $menu-widths {
  .menu.component-width-#{$width} {
    $min-width: map.get($props, "min-width");
    $width: map.get($props, "width");

    @include map-props-mixin(
      map.get($component-min-width-sizing, $min-width));
    @include map-props-mixin(
      map.get($component-width-sizing, $width));
  }
}

// Children

.menu-item,
.menu-link {
  align-items: center;
  display: flex;
}

.menu-link {
  flex: 1 1 auto;
  transition: all $menu-transition-duration;

  &.component-is-selected {
    pointer-events: none;
  }
}
