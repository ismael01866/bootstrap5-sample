@use "sass:map";

.list {
  box-sizing: border-box;

  @at-root {
    ol#{&} {
      list-style: decimal;
    }
  }
}

// Children

.list-item {
  box-sizing: border-box;
  list-style-position: inside;
}

// -- Borders

.list.component-border-bordered {
  border: $list-border-width solid $list-border-color;
  border-radius: $list-border-radius;

  .list-item:not(:last-child) {
    border-bottom: $list-border-width solid $list-border-color;
  }
}

.list.component-border-flushed {
  .list-item:not(:last-child) {
    border-bottom: $list-border-width solid $list-border-color;
  }
}

// -- Size

@each $size, $props in $list-sizes {
  .list.component-size-#{$size} {
    $padding-x: map.get($props, "padding-x");
    $padding-y: map.get($props, "padding-y");

    .list-item {
      @include map-props-mixin(
        map.get($component-padding-x-sizing, $padding-x));
      @include map-props-mixin(
        map.get($component-padding-y-sizing, $padding-y));
    }
  }
}
