.button {
  align-items: center;
  border-style: solid;
  border-width: $button-border-width;
  box-sizing: border-box;
  display: inline-flex;
  text-decoration: none;
  transition: background $button-transition-duration,
    border $button-transition-duration, color $button-transition-duration;

  &:hover {
    cursor: pointer;
    text-decoration: none;
  }
}

.button-icon {
  display: inline-flex;

  svg {
    height: 100%;
  }
}

// Color

@each $color in $component-colors {
  @each $type in $button-types {
    .button-#{$color}-#{$type} {
      @include button-style-mixin($color, $type);

      &:hover {
        @include button-hover-mixin($color);
      }

      &:active {
        @include button-active-mixin($color);
      }
    }
  }
}

// Shape

@each $shape in $button-shapes {
  $props: map-get($component-shapes, $shape);

  .button-shape-#{$shape} {
    @include map-props-mixin($props);
  }
}

// Size

@each $size, $props in $button-sizes {
  .button-size-#{$size} {

    $gap      : map-get($props, "gap");
    $height   : map-get($props, "height");
    $font-size: map-get($props, "font-size");
    $padding-x: map-get($props, "padding-x");

    @include map-props-mixin(
      map-get($component-font-sizing, $font-size));

    @include map-props-mixin(
      map-get($component-gap-sizing, $gap));

    @include map-props-mixin(
      map-get($component-height-sizing, $height));

    @include map-props-mixin(
      map-get($component-padding-x-sizing, $padding-x));
  }
}
