@use "sass:map";

.button {
  align-items: center;
  border-color: transparent;
  border-radius: $button-border-radius;
  border-style: solid;
  border-width: $button-border-width;
  box-sizing: border-box;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  letter-spacing: $button-letter-spacing;
  text-decoration: none;
  transition: all $button-transition-duration, visibility 0s;

  &:hover {
    text-decoration: none;
  }
}

// Patern

@each $pattern in $component-patterns {
  .button.component-pattern-#{$pattern} {
    @include button-pattern-mixin($pattern);
  }
}

// Size

@each $size, $props in $button-sizes {
  .button.component-size-#{$size} {
    $font-size: map.get($props, "font-size");
    $gap: map.get($props, "gap");
    $height: map.get($props, "height");
    $min-width: map.get($props, "min-width");
    $padding-x: map.get($props, "padding-x");

    @include map-props-mixin(
      map.get($component-font-sizing, $font-size));
    @include map-props-mixin(
      map.get($component-gap-sizing, $gap));
    @include map-props-mixin(
      map.get($component-height-sizing, $height));
    @include map-props-mixin(
      map.get($component-min-width-sizing, $min-width));
    @include map-props-mixin(
      map.get($component-padding-x-sizing, $padding-x));
  }
}

// Variants

.button-icon {
  &[class*="component-size"] {
    padding: 0;
  }
}
