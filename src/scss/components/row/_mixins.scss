@use "sass:math";

@mixin make-row-mixin() {
  box-sizing: border-box;
  display: flex;
  flex: 1 1 auto;
  flex-wrap: wrap;
  margin-right: calc(-0.5 * (var(--component-gap)));
  margin-left: calc(-0.5 * var(--component-gap));
  min-width: 100%;
}

@mixin row-cols-mixin($count) {
  > *,
  > .col {
    flex: 0 0 auto;
    width: math.div(100%, $count);
  }
}

@mixin make-row-col-mixin() {
  box-sizing: border-box;
  flex-shrink: 0;
  max-width: 100%;
  padding-right: calc(0.5 * var(--component-gap));
  padding-left: calc(0.5 * var(--component-gap));
  width: 100%;
}

@mixin make-row-cols-mixin(
  $columns : $grid-row-columns,
  $breakpoints: $breakpoints-map,
) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .row-cols#{$infix}-auto {
        > *,
        > .col {
          flex: 0 0 auto;
          width: auto;
        }
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols-mixin($i);
          }
        }
      }
    }
  }
}
